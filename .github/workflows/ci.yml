# Nombre del WorkFlow
name: CI - Java Spring Boot

# Cuando se va a ejecutar
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

# Que trabajo debe hacerse
jobs:
  build:
    # Maquina a usar sera ubuntu la ultima version
    runs-on: ubuntu-latest

    steps:
      # Trae tu codigo de Github a la maquina virtual
    - name: Checkout repository
      uses: actions/checkout@v3

      # Instala java 17 en la maquina virtual, necesario para compilar codigo
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Guarda las librerias de Maven en cache para no descargarlas otra vez    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    # Convierte archivos .java a .class  - Compila codigo 
    # Esto se ejecuta dentro de la maquina virtual  
    - name: Build with Maven
      run: mvn clean package

    - name: SonarCloud Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
            -Dsonar.projectKey=emmanuel30412_agendapro365
            -Dsonar.organization=emmanuel30412
            -Dsonar.java.binaries=target/classes
            -Dsonar.sources=src/main/java
            -Dsonar.tests=src/test/java
